# Contributor: Marios Paouris <mspaourh@gmail.com>

_realname=openconnect
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}"
         "${MINGW_PACKAGE_PREFIX}-${_realname}-wintun")
pkgver=9.12
pkgrel=1
pkgdesc="Open client for Cisco AnyConnect, Juniper, Pulse, GlobalProtect, F5, Fortinet and Array Networks (IBM Cloud) VPNs. (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://www.infradead.org/openconnect"
license=('spdx:LGPL-2.1-or-later')
makedepends=("${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-autotools"
             "${MINGW_PACKAGE_PREFIX}-curl"
             "unzip"
             "${MINGW_PACKAGE_PREFIX}-jq")
depends=("${MINGW_PACKAGE_PREFIX}-libxml2" 
         "${MINGW_PACKAGE_PREFIX}-gnutls>=3.6.13"
         "${MINGW_PACKAGE_PREFIX}-p11-kit"
         "${MINGW_PACKAGE_PREFIX}-nettle"
         "${MINGW_PACKAGE_PREFIX}-lz4"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "${MINGW_PACKAGE_PREFIX}-stoken=0.92")
options=('staticlibs' 'strip')
source=("https://gitlab.com/openconnect/openconnect/-/archive/v${pkgver}/${_realname}-v${pkgver}.tar.gz"
        "wintun-0.14.1.zip::https://gitlab.com/openconnect/openconnect-gui/-/raw/edd44c4d181b5333bc499b7e8ff8978f35cea7e8/wintun/wintun-0.14.1.zip?inline=false"
        "0001-openconnect-9.12-version.patch"
        "0002-openconnect-9.12-configure.patch"
        "0003-openconnect-9.12-makefile.patch"
)
sha256sums=("c1c22b2bcb92576960c545f09e35ff36142198c21ed766752076fa72eb4070d4"
            "07c256185d6ee3652e09fa55c0b673e2624b565e02c4b9091c79ca7d2f24ef51"
            "714830aa86b42bf836612918d11de7b70252d17f13b418745a93e386d4bdd3ee"
            "067f14c130c217a987da83cbadddaf14f220ae9e34b9e3cac7dcc08c27ed4df3"
            "129749a3f4c652fa000151d041f6bf27ab84e1ffc9a5aad888078c04b7551573"
)
validpgpkeys=('BE07D9FD54809AB2C4B0FF5F63762CDA67E2F359') # David Woodhouse <dwmw2@infradead.org>

# Helper macros to help make tasks easier #
apply_patch_with_msg() {
  for _patch in "$@"
  do
    msg2 "Applying $_patch"
    patch -Np1 -i "${srcdir}/$_patch"
  done
}

del_file_exists() {
  for _fname in "$@"
  do
    if [ -f $_fname ]; then
      rm -rf $_fname
    fi
  done
}
# =========================================== #

prepare() {
  cd ${srcdir}/${_realname}-v${pkgver}

  apply_patch_with_msg \
    0001-openconnect-9.12-version.patch \
    0002-openconnect-9.12-configure.patch \
    0003-openconnect-9.12-makefile.patch

  ./autogen.sh
}

build() {
  #export lt_cv_deplibs_check_method='pass_all'
  [[ -d "${srcdir}/build-${MSYSTEM}" ]] && rm -rf "${srcdir}/build-${MSYSTEM}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  #wintun download from official distribution is unreliable; we download it from openconnect-gui
  #openconnect's make will also validate it's sha sum
  cp "${srcdir}/wintun-0.14.1.zip" .

  #specify -Wno-error=... to workaround compilation issue on GCC 14
  #see discussion on https://gitlab.com/openconnect/openconnect-gui/-/merge_requests/307#note_1904157712
  #this can be removed after 9.13 is released, it is fixed in https://gitlab.com/openconnect/openconnect/-/commit/d8127b8f4bbaedfe1665c2052f47c5616aa404b1
  CFLAGS="${CFLAGS} -g -O2 -Wno-error=incompatible-pointer-types" \
  ../${_realname}-v${pkgver}/configure \
    --disable-dependency-tracking \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --disable-nsis-installer \
    --with-gnutls \
    --without-openssl \
    --without-libpskc \
    --without-libproxy \
    --with-vpnc-script=vpnc-script-win.js 

  #set MINGW_PACKAGE vars so version.sh produces the correct version string in version.c
  MINGW_PACKAGE_VERSION=$pkgver MINGW_PACKAGE_RELEASE=$pkgrel make
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"
  #autocompletion tests fail since autocompletion is not enabled in windows builds
  #so disable them until it is actually enabled
  make DESTDIR="${pkgdir}" XFAIL_TESTS="autocompletion" check

}

package_openconnect() {
  optdepends+=("${MINGW_PACKAGE_PREFIX}-${_realname}-wintun")

  cd "${srcdir}/build-${MSYSTEM}"
  make DESTDIR="${pkgdir}" install

  #remove wintun.dll from installation; will install it on it's own package
  rm -f "${pkgdir}${MINGW_PREFIX}/sbin/wintun.dll"

  install -Dm644 "${srcdir}/${_realname}-v${pkgver}/COPYING.LGPL" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}

package_openconnect-wintun() {
  depends=()
  pkgdesc="Wintun Driver for Open client for Cisco AnyConnect, Juniper, Pulse, GlobalProtect, F5, Fortinet and Array Networks (IBM Cloud) VPNs. (mingw-w64)"

  cd "${srcdir}/build-${MSYSTEM}"
  mkdir -p "${pkgdir}${MINGW_PREFIX}/sbin"
  install -c .libs/wintun.dll "${pkgdir}${MINGW_PREFIX}/sbin"
}

# template start; name=mingw-w64-splitpkg-wrappers; version=1.0;
# vim: set ft=bash :

# generate wrappers
for _name in "${pkgname[@]}"; do
  _short="package_${_name#${MINGW_PACKAGE_PREFIX}-}"
  _func="$(declare -f "${_short}")"
  eval "${_func/#${_short}/package_${_name}}"
done
# template end;
